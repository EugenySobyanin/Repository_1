Урок 1. Шаблоны веб страниц
	- функция render (from django.shortcuts import render)
	- фозврат views функции return render(request, template_name)
	- расположение шаблона синтаксис template_name = 'homepage/index.html'
	- шаблоны можно хранить на уровне приложения или на уровне проекта , пример: templates/catalog/list.html
	- требуется провести настройку в файле settings.py

Урок 2. HTML-шаблоны из частей: теги include, extends, block
	- синтаксис {% tag %} (бывают одиночные и парные)
	- создание базового шаблона (base.html) он содержит тот код, который повторяется на всех страницах сайта.
	- в базовом шаблоне размечаются области, куда можно вставить уникальное для каждой станицы содержимое
	"посадочные места", синтаксис {% block имя_блока %} - {% endblock %}

	- создание дочернего шаблона, в которых хранится лишь фрагмент HTML-кода - уникальное содержимое
	обрамлено тегами {% block имя_блока %} - {% endblock %} - должны совпадать с именами в base.html

	- именно дочерний шаблон нужно вызывать из view-функции.
	- чтобы Django понимал какой шаблон базовый, в начало кода дочерних шаблонов вставляют тег {% extends "адрес_базового_шаблона" %}
	- базовый шаблон принято размещать в корне папки templates
	
	- {% include %} - позволяет разделять шаблоны на части
	- отдельные фрагменты включаются в основной файл с помощью тега {% include "адрес_подключаемого_файла" %}
	- шаблоны, встраиваемые через {% include %}, обычно хранят в директории includes, вложенную в папку templates
	- при таком расположении к адресу надо добавить название директории, пример: {% include "includes/header.html" %}
	- 