Урок 1. Шаблоны веб страниц
	- функция render (from django.shortcuts import render)
	- фозврат views функции return render(request, template_name)
	- расположение шаблона синтаксис template_name = 'homepage/index.html'
	- шаблоны можно хранить на уровне приложения или на уровне проекта , пример: templates/catalog/list.html
	- требуется провести настройку в файле settings.py

Урок 2. HTML-шаблоны из частей: теги include, extends, block
	- синтаксис {% tag %} (бывают одиночные и парные)
	- создание базового шаблона (base.html) он содержит тот код, который повторяется на всех страницах сайта.
	- в базовом шаблоне размечаются области, куда можно вставить уникальное для каждой станицы содержимое
	"посадочные места", синтаксис {% block имя_блока %} - {% endblock %}

	- создание дочернего шаблона, в которых хранится лишь фрагмент HTML-кода - уникальное содержимое
	обрамлено тегами {% block имя_блока %} - {% endblock %} - должны совпадать с именами в base.html

	- именно дочерний шаблон нужно вызывать из view-функции.
	- чтобы Django понимал какой шаблон базовый, в начало кода дочерних шаблонов вставляют тег {% extends "адрес_базового_шаблона" %}
	- базовый шаблон принято размещать в корне папки templates
	
	- {% include %} - позволяет разделять шаблоны на части
	- отдельные фрагменты включаются в основной файл с помощью тега {% include "адрес_подключаемого_файла" %}
	- шаблоны, встраиваемые через {% include %}, обычно хранят в директории includes, вложенную в папку templates
	- при таком расположении к адресу надо добавить название директории, пример: {% include "includes/header.html" %}
	
Урок 3. Словарь контекста, ветвление и циклы в шаблонах
	- третий (необязательный) параметр
	- данные подготавливаются и сохраняются в словарь (обычно context)
	- передаем в render словарь context
	- Чтобы вывести в HTML-шаблон данные из словаря context, нужно лишь указать ключи словаря в нужном месте шаблона.
	- синтаксис , ключи в шаблоне указываюб {{ имя_ключа }}
	- в качестве значений в словаре может быть что угодно
 	- Обращение к ключам вложенных словарей, атрибутам объектов 
		{{ var_dict.key }} — обращение к ключу вложенного словаря
		{{ var_instance.attribute }} — обращение к атрибуту или методу класса
		{{ var_list.0 }} — обращение к элементу списка 
	
	Ветвление:
		- синтаксис {% if %}...({% elif %})...{% endif %}

	Циклы:
		- синтаксис {%for ... in ...%}...{% endfor %}
		- В циклах, применяемых в шаблонах Django, доступна переменная forloop — объект с несколькими полезными атрибутами
			forloop.counter - номер текущей итерации (с 1)
			forloop.counter0 - номер текущей итерации(с 0)
			forloop.revcounter - кол.во итераций до конца цикла, на последней итерации вернет 1
			forloop.revcounter0 - кол.во итераций до конца цикла, на последней итерации вернет 0
			forloop.first - True, если это первая итерация
			forloop.last - True, если это последняя итерация
			
			- можно пременить необязательный тег {% empty %}, его ставят перед {% enfor %}, 
			если коллекция пустая будет выведено то, что между {% empty %} и {% endfor %}

Урок 4.Ссылки в шаблонах: name и namespace
	- name (в файлах urls.py приложений передаем третий параметр в функцию path, пример: path('catalog/', views.product_list, name='product_list')
	будет удобно если имя будет совпадать с view функцией
	
		- синтаксис. Как указать ссылку в шаблоне? - <a href="{% url 'имя_ссылки' %}">...</a>

	- пространство имен: namespace
		- чтобы шаблонизатор понимал к какому приложению относится name опреленной ссылки
		- в urls.py приложения создается переменная app_name, пример: app_name = 'catalog'
		удобно делать namespace таким же как название приложения

		- тогда ссылка выгладит namespace:name, пример: <a href="{% url 'catalo:product_list' %}"....</a>

Урок 5. Фильтры в шаблонах: модифицируем контекст страницы
	- Данные из словаря context можно обработать в шаблоне ещё и встроенными в шаблонизатор   инструментами — фильтрами. 
	Фильтры могут изменять значения переменных.

	- В коде шаблона название фильтра пишется после ключа словаря или имени переменной, 
	через символ |: {{ variable|filter:параметры }}.

	Фильтры:
		- length {{ long_string|lenght }} - возвращает длину строки
		- safe {{ product_description|safe }} - чтобы html теги в строке не выводились на страницу, а работали по назначению
		- linebreaksbr  - заменяет символ \n на тег <br> для переноса строки
		- date - работает с объектами date и datetime, у этого тега есть разные маски
		- title - работает со строкой, каждое слово делает с большой буквы
		- truncatewords:цифра - обрезает до определенного кол.ва слов
		
Урок 6. Подключение стилей, картинок и скриптов к шаблонам
	
