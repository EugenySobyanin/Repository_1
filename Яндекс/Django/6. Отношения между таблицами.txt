Урок 1. Отношения между таблицами
	Три типа связей:
		- Один к одному (1:1 или one-to-one)
		- Многие к одному (M:1 или many-to-one)
		- Многие ко многим (N:M или many-to-many)

	- Связь один к одному - бывает обязательная и необязательная связь
	- Свзь многие к одному(М:1) - бывает обязательная и необязательная связь
	- Связь многие ко многим(N:M) - для таких связей необходима промежуточная таблица
		- Композитный первичный ключ (пара значений в промежуточной таблице)

Урок 2. Отношения один к одному.
	- таблице создается внешний ключ (FOREIGN KEY) 
	на первичный(PRIMARY KEY) ключ другой таблицы
	Пример:
		import sqlite3

		con = sqlite3.connect('db.sqlite')
		cur = con.cursor()

		cur.executescript('''
		CREATE TABLE IF NOT EXISTS original_titles(
    			id INTEGER PRIMARY KEY,
    			title TEXT NOT NULL
		);

		CREATE TABLE IF NOT EXISTS video_products(
    			id INTEGER PRIMARY KEY,
    			title TEXT NOT NULL,
    			original_title_id INTEGER NOT NULL UNIQUE,
    			FOREIGN KEY(original_title_id) REFERENCES original_titles(id)
		);
		''')

		con.close()

	Получение информации из связных таблиц.
	Пример:
		SELECT video_products.title AS translation,
       		       original_titles.title AS original
		FROM video_products,
     	             original_titles
		WHERE 
                   video_products.original_title_id = original_titles.id
                -- Для интереса добавим условие
                  AND
                    original LIKE 'M%'

Урок 3. Отношение многие к одному.

Урок 4. Объединение таблиц JOIN.
	Пример:
		-- Верни все поля
		SELECT *
		-- из таблицы video_products
		FROM video_products
		-- ...но перед этим присоедини записи из таблицы slogans так, чтобы
		-- в записях значения полей video_products.slogan_id и slogans.id были равны.
		JOIN slogans ON video_products.slogan_id = slogans.id; 

	В блоке ON содержатся условия объединения таблиц.
	
	Существует 5 типов JOIN (sqlite поддерживает 3)
	
	1. INNER JOIN - Внутреннее пересечение (пример выше)
		- Включает только те записи в которых выполняется условие в блоке ON
	2. LEFT OUTER JOIN - Левое внешнее соединение
		- Левая таблица указана в блоке FROM
		- Правая после JOIN ( правых может быть несколько)
		
		- При выполнении LEFT JOIN возвращаются все строки левой таблицы.
		Данными из правой таблицы дополняются только те строки левой таблицы,
		для которых выполняются условия соединения после ON, для недостающих 
		данных вместо строк правой таблицы вставляется NULL.

	 Пример:
		SELECT video_products.title,
       		       slogans.slogan_text
		FROM video_products
		LEFT JOIN slogans ON video_products.slogan_id = slogans.id; 

	3. RIGHT OUTER JOIN - выводятся все записи из правой таблицы, добавляются из левой
	4. FULL OUTER JOIN - Выводятся все записи из объедененных таблиц.
		Те записи, у которых запрошенные значения совпадают, - выводятся парами, у 
		остальных недостающее значение заменяется на NULL.
	5.CROSS JOIN - возвращает декартово множество. Каждая запись одной таблицы 
        с каждой записью другой.
	
	
		
	
	
	
		