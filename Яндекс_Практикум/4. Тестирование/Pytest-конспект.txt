26. Библиотека pytest
	1. Библиотека pytest. Выборочный запуск тестов.
		- документация
		- установка и запуск
		- pip install pytest==7.1.2 
		- Ожидаемое падение: тестируем исключения
			- pytest.raises()
		- Подробный (verbosity) и краткий вывод результатов
		- Выборочный запуск тестов
			- pytest file_name.py
			
		
	2. Запуск упавших тестов. Кэш pytest
		- Тестирование в режиме «до первого упавшего теста»
		- Поэтапное выполнение тестов: stepwise
		- Кеш pytest
		
	3. Отладка тестов
		- использование print() -s  -rP
		- Отладка тестов через Python Debugger
			- pdb.set_trace()
		- Отладка тестов через VS Code	
	4. Маркеры pytest: пропуск тестов, ожидаемое падение и параметризация
		- @pytest.mark.<название маркера>
		- Пропуск теста
			- @pytest.mark.skip  # Тест с этим маркером будет пропущен.
			- pytestmark = pytest.mark.skip  # Все тесты в этом файле будут 					пропущены.
		- Маркер «падающих» тестов
			- @pytest.mark.xfail(reason='Пусть пока падает, завтра починю.')
		- Параметризация тестов
			- @pytest.mark.parametrize()
			- ids - названия Node для тестов
			
	5. Фикстуры в pytest
		- @pytest.fixture
		- conftest.py - файл для хранения фикстур
		- Как это делается в pytest
			- @pytest.fixture  # Декоратор, обозначающий, что эта функция - 				фикстура.
			- фикстуры могут вызывать друг друга
		- Вызов фикстуры при помощи маркера
			- когда нам не нужно возвращаемое значение фикстуры
			- вызов через маркер @pytest.mark.usefixtures('start_engine') 
			- маркер можно поставить перед название класса
		- Автоматически используемые фикстуры
			- autouse=True
		- Области видимости фикстуры
			- scope='...'
			- function, class, module, package, session
		- Очистка (teardown)
			- yield - момент когда надо переходить к тестам	
			- если фикстура возвращает какой-то объект, то yield используется вместо return
		- confest.py
			- хранение фикстур
	6. Файл конфигураций
		- ...
27. Pytest для Django
	1. Плагин pytest-django
		- pip install pytest-django==4.5.2
		- указать в pytest.ini расположение файла с настройками
		- дополнительные встроенные функции 
			- assertRedirects()
			- assertFormError()
		        - импорт из pytest_django.asserts
		- Фикстуры pytest-django
			- client
			- admin_client
			- admin_user
			- django_user_model
			- force_login()
		- db
			- @pytest.mark.django_db
	2. Тестирование маршрутов
		- Подготовка проекта YaNote к тестированию
			- ограничить список директорий для pytest
			- pytest.ini
		- создание фикстур для проекта
		- передача параметров в декоратор @pytest.mark.parametrize()
		- pytest-lazy-fixture
			- pip install pytest-lazy-fixture==0.6.3
		- тестирование редиректов
			- assertRedirects()

	3.
	4.