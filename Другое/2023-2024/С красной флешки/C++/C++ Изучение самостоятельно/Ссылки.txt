#include <iostream>
using namespace std;

//// Ссылки.
// Ссылка является псевдонимом, вторым имененм для объекта
/*Раз ссылка является другим именем уже существующего объекта, 
то в качестве инициализирующего объекта должно выступать имя 
некоторого объекта, уже расположенного в памяти.*/

/*При использовании ссылок следует помнить одно 
правило: однажды инициализировав ссылку ей нельзя 
присвоить другое значение!*/

// Длы ссылок обязательна инициализация при создании

// Ссылки как результат функции


// передача аргументов в функцию по ссылке
void mySwap(int &a, int &b)
{
    int temp = a;
    a = b;
    b = temp;
}

/*функция определяет максимальный элемент
и возвращает ссылку на него*/
int& max_el(int* nums, int size)
{
    int index_for_max_el = 0;
    for (int i = 0; i < size; ++i)
    {
        if (nums[i] > nums[index_for_max_el])
        {
            index_for_max_el = i;
        }
    }
    return nums[index_for_max_el];
}


int main()
{
    setlocale(LC_ALL, "RU");

    int num = 123;       // переменная
    int* ptr_num = &num; // указателю присвоен адрес num
    int &ss_num = num;   // ссылка ассоциирована с num
    int* p = &ss_num;    // указателю присвоен адрес ss_num

    cout << "num = " << num << endl;
    cout << "ptr_num = " << *ptr_num << endl;
    cout << "ss_num = " << ss_num << endl;
    cout << "p = " << *p << endl;

    int num_1 = 1, num_2 = 88;
    mySwap(num_1, num_2);
    cout << "После функции свап: num_1 = " << num_1 << " num_2 = " << num_2 << endl;
    
    // проверка функции которая возвращает макс.эл
    int arr[5] = { 0, -50, 234, 76, 14 };
    cout << "Максимальный элемент: " << max_el(arr, 5) << endl;
    
    // возвращаемая ссылка может стоять слева в выражении   // очень прикольное и необычное свойство!!!
    max_el(arr, 5) = 100;
    cout << "Присвоили макс эл.ту другое значение " << arr[2] << endl;

}

