#include <iostream>
#include <time.h>


void f(int* a, int* b) {   // функция менят значения двух переменных
	int temp = *a;
	*a = *b;
	*b = temp;
}


template <typename T>
void change(T* arr, int size) {
	for (int i = 1; i < size; i+=2) {
		T tmp = *(arr + i);
		*(arr + i) = *(arr + i - 1);
		*(arr + i - 1) = tmp;
	}
}

template<typename T>
void print(T* arr, int size) {
	for (int i = 0; i < size; i++) {
		std::cout << *(arr + i) << " ";
	}
	std::cout << std::endl;
}
//
//template<typename T>
//void sum_el_massive(T *A, T *B, T *C, int size1, int size2) {
//	int size3 = size1 + size2;
//	
//	int i = 0,  n = 0, m = 0;
//	while (true) 
//	{
//		if (*(A + n) < *(B + m)) 
//		{
//			*(C + i++) = *(A + n++);
//		}
//		else 
//		{
//			*(C + i++) = *(B + m++);
//		}
//
//		if (n == size1 and m == size2) 
//		{
//			break;
//		}
//	}
//	while (n < size1) 
//	{
//		*(C + i++) = *(A + n++);
//	}
//	while (m < size2) 
//	{
//		*(C + i++) = *(B + m++);
//	}
//}

template<typename T>
void intersection(T* A, T* B, T* C, int size1, int size2) {
	int size3 = 0;
	for (int i = 0; i < size1; i++) 
	{
		for (int j = 0; j < size2; j++)
		{
			if (*(A + i) == *(B + j)) {
				size3 += 1
			}
		}
	}


}


int main()
{
	using namespace std;
	srand(time(0));
	setlocale(LC_ALL, "RU");

	//int a = 10;
	//int b = 30;
	//int c = 30;
	//int d = 30;

	//int* ptr_a = &a; //создание указателя

	//cout << *ptr_a << endl; // оперция разименования 

	//*ptr_a = 20; // поместили другое значение через указатель
	//cout << *ptr_a << endl;

	//int** ptr_ptr = &ptr_a; // создание указателя на указатель

	//cout << *ptr_ptr << "\t" << ptr_a << endl;

	//int* ptr; // сначала создаем указатель, а потом присваиваем значение
	//ptr = &b;
	//cout << *ptr << endl;

	//int* const ptr_1 = &a; // константный указатель, нельзя поменять адрес, но можно поменять значение
	//*ptr_1 += 100;
	//cout << *ptr_1 << endl;

	//const int* ptr_2 = &c; // константный указатель, нельзя поменять значение, но можно поменять адрес
	//ptr_2 = &d;
	//cout << *ptr_2 << endl;

	//cout << endl << endl;
	//int num = 20;
	//int* ptr_4 = &num;
	//cout << *(ptr_4) + 1; // увеличили значение на которое указывает указатель


	//cout << endl;
	//cout << endl;
	//int numbers[3]{ 1, 2, 3 };
	//int* ptr_6 = numbers; // указатель на массив 
	//cout << *(ptr_6 + 0) << ", " << *(ptr_6 + 1) << ", " << *(ptr_6 + 2) << endl; //выводит массив по элементам


	//int a = 10;
	//int b = 30;
	//f(&a, &b);
	//cout << a << ",  " << b << endl;

	//int* ptr = nullptr;
	//cout << ptr;

	//int arr[10]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	//int arr_2[5]{ 11, 12, 13, 14, 15 };

	//change(arr, 10);
	//print(arr, 10);

	const int n = 5, m = 3;
	int A[n]{ 1, 2, 3, 7, 10 };
	int B[m]{ 2, 3, 6 };
	int C[n + m];
	intersection(A, B, C, n, m);
	print(C, n + m);





}
